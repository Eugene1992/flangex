<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

       <context:property-placeholder location="classpath:db/mysql.properties" />

       <tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>

       <!-- Session Factory config -->
       <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
            <property name="dataSource" ref="dataSource"/>
            <property name="packagesToScan" value="ua.com.flangex.model" />
            <property name="hibernateProperties">
                <props>
                    <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
                    <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                    <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                    <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                    <!--<prop key="hibernate.hbm2ddl.import_files">sql/populate-db.sql</prop>-->
                    <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
                </props>
            </property>
       </bean>

       <!-- Session factory transaction manager -->
       <bean id="transactionManager"  class="org.springframework.orm.hibernate4.HibernateTransactionManager">
            <property name="sessionFactory" ref="sessionFactory" />
       </bean>

       <bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

        <beans profile="postgres">
            <context:property-placeholder location="classpath:db/mysql.properties" system-properties-mode="OVERRIDE"/>
            <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                <property name="driverClassName" value="org.postgresql.Driver" />
                <property name="url" value="jdbc:postgresql://localhost:5432/flangex" />
                <property name="username" value="postgres" />
                <property name="password" value="root" />
            </bean>
        </beans>

        <beans profile="mysql">
            <context:property-placeholder location="classpath:db/mysql.properties" system-properties-mode="OVERRIDE"/>
            <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                <property name="driverClassName" value="${database.driver}" />
                <property name="url" value="${database.url}" />
                <property name="username" value="${database.user}" />
                <property name="password" value="${database.password}" />
            </bean>
        </beans>

        <beans profile="heroku">
            <context:property-placeholder location="classpath:/db/heroku.properties" system-properties-mode="OVERRIDE"/>

            <bean class="java.net.URI" id="dbUrl">
                <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
            </bean>

            <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
                <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
                <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
                <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
            </bean>
        </beans>

        <beans profile="hsql">
            <context:property-placeholder location="classpath:db/hsql.properties" system-properties-mode="OVERRIDE"/>
            <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                <property name="driverClassName" value="${database.driver}" />
                <property name="url" value="${database.url}" />
                <property name="username" value="${database.user}" />
                <property name="password" value="${database.password}" />
            </bean>
        </beans>

    <!-- Entity Manager Factory config -->
    <!--<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
         <property name="dataSource" ref="dataSource"/>
         <property name="packagesToScan" value="ua.com.flangex.model" />
         <property name="jpaVendorAdapter">
             <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
         </property>
         <property name="jpaProperties">
             <props>
                 <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                 <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                 <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                 <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                 <prop key="hibernate.hbm2ddl.import_files">sql/populate-db.sql</prop>
             </props>
         </property>
    </bean>

    &lt;!&ndash; Entity Manager transaction manager &ndash;&gt;
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
         <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>-->
</beans>